version: '3.9'
services:
  app:
    container_name: app_container
    build:
      context: .
      dockerfile: app.Dockerfile
    volumes:
      - ./src:/usr/app/src
    ports:
      - ${PORT}:4000
    restart: always
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - postgres
    depends_on:
      - postgres

  postgres:
    container_name: postgres_container
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - '${PGADMIN_PORT}:80'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres
    depends_on:
      - postgres

volumes:
  pg_data: {}
  pgadmin_data: {}

networks:
  postgres:
    driver: bridge
